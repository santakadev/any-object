<?php

namespace Santakadev\AnyObject\Tests\Generator\Generated;

use Faker\Factory;
use Santakadev\AnyObject\Tests\TestData\ArrayTypes\GenericArrayOfUnionBasicTypesObject;

final class AnyGenericArrayOfUnionBasicTypesObject
{
    public static function with(array|None $value = new None()) : GenericArrayOfUnionBasicTypesObject
    {
        if ($value instanceof None) {
            $faker = Factory::create();
            $elementsCount = mt_rand(0, 50);
            $value = [];
            for ($i = 0; $i < $elementsCount; $i++) {
                $value[] = match (array_rand(['string', 'int', 'float', 'bool'])) {
                    0 => $faker->text(200),
                    1 => mt_rand(PHP_INT_MIN, PHP_INT_MAX),
                    2 => PHP_FLOAT_MIN + (PHP_FLOAT_MAX - PHP_FLOAT_MIN) * (mt_rand(0, (1 << 53) - 1) / (1 << 53)),
                    3 => (bool) mt_rand(0, 1),
                };
            }
        }
        return new GenericArrayOfUnionBasicTypesObject($value);
    }
    public static function build() : GenericArrayOfUnionBasicTypesObject
    {
        return self::with();
    }
}
